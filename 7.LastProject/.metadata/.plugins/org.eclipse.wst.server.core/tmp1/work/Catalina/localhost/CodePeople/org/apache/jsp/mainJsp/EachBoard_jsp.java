/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-25 03:35:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mainJsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.cmm.vo.BoardPagingVO;
import java.util.Map;
import java.util.List;
import kr.or.ddit.member.vo.MemberVO;

public final class EachBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.ddit.member.vo.MemberVO");
    _jspx_imports_classes.add("kr.or.ddit.cmm.vo.BoardPagingVO");
    _jspx_imports_classes.add("java.util.Map");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


	Integer boardCodeNo = null;
	
//	boardCodeNo = (Integer)request.getAttribute("boardCodeNo");
	
	boardCodeNo = 1;
	
/* 	if(boardCodeNo == null){
		System.out.println("게시판 선택 안됨! 종료합니다.");
		System.exit(0);
	} */
	
	List<Map<String, Object>> boardList = (List<Map<String, Object>>)request.getAttribute("boardPagingList");
	
	System.out.println(boardList == null);
	
	BoardPagingVO pagingVO = (BoardPagingVO) request.getAttribute("boardPagingVO");
	Integer boardCode = (Integer) request.getAttribute("boardCode");
	String boardName = (String) request.getAttribute("boardName");
	Integer currentPageNo = (Integer)request.getAttribute("currentPageNo");
	MemberVO loginMember = (MemberVO)session.getAttribute("loginMember");
	
	int memNo = 0;
	
	int hasRight = 0;
	
	String memId = null;
	
	if(loginMember != null){
		memNo = loginMember.getMemNo();
	}

      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Bootstrap Example</title>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/d3ee6ce800.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- include summernote css/js/ codemirror-->\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/codemirror.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/theme/monokai.css\">\r\n");
      out.write("    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/codemirror.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/3.20.0/mode/xml/xml.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/codemirror/2.36.0/formatting.js\"></script>\r\n");
      out.write("    <link href=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"http://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.8/summernote.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/main.css\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/boardFunction.js\"></script>    \r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/jquery.serializejson.min.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("\treply = {};\r\n");
      out.write("\r\n");
      out.write("// \tlet currentPageNo = 1;\r\n");
      out.write("// \tlet boardCode = 1;\r\n");
      out.write("\t\r\n");
      out.write("\twindow.onload = function(){\r\n");
      out.write("\t\r\n");
      out.write("\t\tcurrentPageNo = ");
      out.print(currentPageNo );
      out.write(";\r\n");
      out.write("\t\tboardCodeNo = ");
      out.print(boardCode );
      out.write(";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tconsole.log(currentPageNo);\r\n");
      out.write("\t\tconsole.log(boardCodeNo);\r\n");
      out.write("\t\t\r\n");
      out.write("    \tconsole.log(\"EachBoard.jsp이다\");\r\n");
      out.write("    \t\r\n");
      out.write("        $(document).ready(function () {\r\n");
      out.write("            $('.summernote').summernote({\r\n");
      out.write("                height: 300,                 // set editor height\r\n");
      out.write("                minHeight: null,             // set minimum height of editor\r\n");
      out.write("                maxHeight: null,             // set maximum height of editor\r\n");
      out.write("                focus: true,                  // set focus to editable area after initializing summernote\r\n");
      out.write("                codemirror: { // codemirror options\r\n");
      out.write("                theme: 'monokai',\r\n");
      out.write("                \r\n");
      out.write("        \t\t   }\r\n");
      out.write("       \t\t });\r\n");
      out.write("        });       \r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("        $(document).ready(function () {\r\n");
      out.write("            $('#summernote').summernote();\r\n");
      out.write("        });\r\n");
      out.write("\t\t\r\n");
      out.write("        \t\r\n");
      out.write("        //'작성완료' 전송 버튼 이벤트\r\n");
      out.write("        $('#send').on('click', function () {\r\n");
      out.write("            var fdata = $('#fid').serializeJSON();\r\n");
      out.write("            console.log(fdata);\r\n");
      out.write("            \r\n");
      out.write("            $.ajax({\r\n");
      out.write("            \turl\t : \"/CodePeople/BoardInsert.do\",\r\n");
      out.write("            \ttype : \"post\",\r\n");
      out.write("            \tdata : fdata,\r\n");
      out.write("            \tdataType: \"json\",\t\r\n");
      out.write("            \tsuccess : function(res) {\r\n");
      out.write("            \t\talert(res.flag);\r\n");
      out.write("            \t\tlocation.href=\"/CodePeople/EachBoardPaging.do?currentPageNo=1&boardCode=");
      out.print(boardCode );
      out.write("\";\r\n");
      out.write("                \t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(xhr) {\r\n");
      out.write("\t\t\t\t\talert(\"상태 : \" + xhr.status + \" text : \" + xhr.statusText);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("            \t\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("        }); //글작성 끝\r\n");
      out.write("        \r\n");
      out.write("        //글 수정,삭제 / 댓글 등록 수정 삭제 버튼 이벤트 \r\n");
      out.write("        $(document).on('click', '.action' , function() {\r\n");
      out.write("       \r\n");
      out.write("           vname = $(this).attr('name');\r\n");
      out.write("           vidx = $(this).attr('idx');\r\n");
      out.write("              \r\n");
      out.write("        \t\r\n");
      out.write("        \tif(vname == \"update\"){\r\n");
      out.write("        \t\talert(vidx + \"번 글 수정\");\r\n");
      out.write("        \t\talert(vname + \"버튼네임이다 네임\")\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tbtnupdate = this;\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tparent = $(this).parents('.card');\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t//제목 태그 내용\r\n");
      out.write("        \t\twriter = $(parent).find('.writer').text();\r\n");
      out.write("        \t\ttitle = $(parent).find('.title').html();\r\n");
      out.write("        \t\tcontent = $(parent).find('.content').html().trim();\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tconsole.log(writer);\r\n");
      out.write("        \t\tconsole.log(title);\r\n");
      out.write("        \t\tconsole.log(content);\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t\r\n");
      out.write("\t\t\t\t$('#updateModal .mwriter').val(writer);        \t\t\r\n");
      out.write("\t\t\t\t$('#updateModal .mtitle').val(title);        \t\t\r\n");
      out.write("\t\t\t\t$('#updateModal .note-editable').html(content);\r\n");
      out.write("\t\t\t\t$('#updateModal .boardNo').val(vidx);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("        \t\t$('#updateModal').modal('show');\r\n");
      out.write("        \t\r\n");
      out.write("        \t//게시글 삭제\t\r\n");
      out.write("        \t}else if(vname == \"delete\"){\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\talert(vidx + \"번글 삭제할거임\")\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t/* btndelete = this; */\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tdeleteBoardServer();\r\n");
      out.write("        \t\r\n");
      out.write("        \t//댓글 등록\r\n");
      out.write("        \t}else if(vname == 'reply'){\r\n");
      out.write("        \t\talert(vidx + \"번 글에 댓글\")\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tcont = $(this).prev().val();\r\n");
      out.write("        \t\tconsole.log(\"댓글 등록 창에 쓴 글 \" + cont);\r\n");
      out.write("        \t\tboardNo = vidx;\r\n");
      out.write("        \t\tconsole.log(\"댓글 쓰려는 게시판 번호 \" + boardNo);\r\n");
      out.write("        \t\tlet boardCodeNo = 3;\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\treply.boardNo = boardNo;\r\n");
      out.write("        \t\treply.repCont = cont;\r\n");
      out.write("        \t\treply.memNo = 1;\r\n");
      out.write("        \t\treply.boardCodeNo = boardCodeNo;\r\n");
      out.write("        \t\tconsole.log(reply.boardNo);\r\n");
      out.write("        \t\tconsole.log(reply.repCont);\r\n");
      out.write("        \t\tconsole.log(reply.memNo);\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\treplyInsertServer(reply);\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t//댓글 리스트\t\r\n");
      out.write("        \t}else if(vname == 'list'){  //글 제목 클릭시 오픈 됨\r\n");
      out.write("        \t\tconsole.log(\"list\")\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tboardHitServer();\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\treplyListServer(this , vidx);\r\n");
      out.write("        \t\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t//댓글 수정\r\n");
      out.write("        \t}else if(vname == 'rmodify'){\r\n");
      out.write("        \t\talert(\"댓글수정버튼\")\r\n");
      out.write("//         \t\tparent = $(this).parents('.rep')\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t//댓글 원본 가져오기\r\n");
      out.write("        \t\tmcont = $(this).parents('.reply-card').find('.reply-content');\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\tconsole.log(\"댓글 원본\" + mcont);\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t\r\n");
      out.write("//         \t\t$('#modiForm textarea').val(mcont);\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\t$(this).parents('.reply-card').find('.card-body').empty().append($('#modiForm'));\r\n");
      out.write("        \t\t$('#modiForm').show();\r\n");
      out.write("        \t// 댓글 삭제\r\n");
      out.write("        \t}else if(vname == 'rdelete'){\r\n");
      out.write("        \t\t\r\n");
      out.write("        \t\treplyDeleteServer(this);\r\n");
      out.write("        \t// 댓글 좋아요\r\n");
      out.write("        \t}else if(vname == 'rlike'){\r\n");
      out.write("        \t\treplyLikeServer(this);\r\n");
      out.write("        \t// 댓글 신고\r\n");
      out.write("        \t}else if(vname == 'rreport'){\r\n");
      out.write("\t        \treplyReportServer(this);\r\n");
      out.write("\t        // 게시글 좋아요\r\n");
      out.write("        \t}else if(vname == 'like'){\r\n");
      out.write("        \t\tboardLikeServer(this);\r\n");
      out.write("        \t// 게시글 신고\r\n");
      out.write("        \t}else if(vname == 'report'){\r\n");
      out.write("        \t\tboardReportServer(this);\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("        });\r\n");
      out.write("        //수정 완료 버튼 클릭시 이벤트\r\n");
      out.write("        $('#upsend').on('click', function() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("        \tudatas = $('#upModal').serializeJSON();\r\n");
      out.write("        \t\r\n");
      out.write("        \talert(JSON.stringify(udatas));\r\n");
      out.write("\t\t\tconsole.log(\"유데이터 : \" + udatas)\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tupdateBoardServer();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#updateModal .fin').val(\"\");\r\n");
      out.write("\t\t\t$('#updateModal').modal('hide');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("        \r\n");
      out.write("        //댓글수정 취소버튼 이벤트\r\n");
      out.write("        $('#btnreset').on('click', function() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("        \treplyReset();\r\n");
      out.write("\t\t})\r\n");
      out.write("        \r\n");
      out.write("        //댓글수정 확인 버튼 클릭 시 이벤트\r\n");
      out.write("        $('#btnok').on('click', function() {\r\n");
      out.write("\t\t\t\r\n");
      out.write("        \tmcont = $('#modiForm textarea').val()\r\n");
      out.write("        \t\r\n");
      out.write("        \tcp = $('#modiForm').parent();\r\n");
      out.write("        \t\r\n");
      out.write("        \t$('body').append($('#modiForm'));\r\n");
      out.write("        \t$('#modiForm').hide();\r\n");
      out.write("        \t\r\n");
      out.write("        \treply.repCont = mcont;\r\n");
      out.write("        \treply.repNo = vidx;\r\n");
      out.write("        \tconsole.log(\"수정된 댓글\" + reply.repCont);\r\n");
      out.write("        \tconsole.log(\"수정된 댓글 번호\" + reply.repNo);\r\n");
      out.write("        \t\r\n");
      out.write("        \treplyUpdateServer();\r\n");
      out.write("\t\t});\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t.input-file {\r\n");
      out.write("    width: 0.1px;\r\n");
      out.write("    height: 0.1px;\r\n");
      out.write("    opacity: 0;\r\n");
      out.write("    overflow: hidden;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    z-index: -1;\r\n");
      out.write("\t}\r\n");
      out.write("    \r\n");
      out.write("\t.js-labelFile {\r\n");
      out.write("\t  \r\n");
      out.write("\t  overflow: hidden;\r\n");
      out.write("\t  text-overflow: ellipsis;\r\n");
      out.write("\t  white-space: nowrap;\r\n");
      out.write("\t  padding: 0 10px;\r\n");
      out.write("\t  cursor: pointer;\r\n");
      out.write("\t}\r\n");
      out.write("\t.js-labelFile .icon:before {\r\n");
      out.write("\t  content: \"\\f093\";\r\n");
      out.write("\t}\r\n");
      out.write("\t.has-file .icon:before {\r\n");
      out.write("\t    content: \"\\f00c\";\r\n");
      out.write("\t    color: #5AAC7B;\r\n");
      out.write("\t  }\r\n");
      out.write("\t .modal-body label{\r\n");
      out.write("            width: 150px;\r\n");
      out.write("       }\r\n");
      out.write("     .btn-tertiary {\r\n");
      out.write("\t  color: #555;\r\n");
      out.write("\t  padding: 0;\r\n");
      out.write("\t  line-height: 40px;\r\n");
      out.write("\t  width: 300px;\r\n");
      out.write("\t  margin: auto;\r\n");
      out.write("\t  display: block;\r\n");
      out.write("\t  border: 2px solid #555;\r\n");
      out.write("\t}\r\n");
      out.write("\t.btn-tertiary:hover, \r\n");
      out.write("\t.btn-tertiary:focus {\r\n");
      out.write("\t    color: lighten(#555, 20%);\r\n");
      out.write("\t    border-color: lighten(#555, 20%);\r\n");
      out.write("\r\n");
      out.write("  }    \r\n");
      out.write("  .note-popover *{\r\n");
      out.write("  \tdisplay : none;\r\n");
      out.write("  }\r\n");
      out.write("\t</style>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!-- 헤더 -->\r\n");
      out.write("    <div id=\"header\">\r\n");
      out.write("        <!-- 헤더 메인 메뉴 바 -->\r\n");
      out.write("        <div id=\"header-container\">\r\n");
      out.write("            <!-- 좌측 메뉴 -->\r\n");
      out.write("            <div id=\"header-left-menu\">\r\n");
      out.write("                <!-- 로고 -->\r\n");
      out.write("                <a href=\"/CodePeople/rehearsal/index.jsp\" id=\"logo\"><i class=\"fas fa-copyright\" style=\"font-size: 32px;\"></i></a>\r\n");
      out.write("                <div class=\"divider\"></div>\r\n");
      out.write("                <!-- 통합 검색창 -->\r\n");
      out.write("                <div id=\"search-box\">\r\n");
      out.write("                    <div id=\"search-item\">\r\n");
      out.write("                        <i class=\"fas fa-search item\" style=\"width:15.3px; height:19px;\"> </i>\r\n");
      out.write("                        <input class=\"\" type=\"text\"\r\n");
      out.write("                            style=\"height:19px; border:none;border-right:0px; border-top:0px; boder-left:0px; boder-bottom:0px;\"\r\n");
      out.write("                            placeholder=\"통합검색\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- 우측 메뉴 -->\r\n");
      out.write("            <div id=\"header-right-menu\">\r\n");
      out.write("                <!-- 메인 메뉴 링크 -->\r\n");
      out.write("                <div id=\"header-link-box\">\r\n");
      out.write("                    <a class=\"header-link\" href=\"/CodePeople/MainHR.do\">인재</a>\r\n");
      out.write("                    <a class=\"header-link\" href=\"/CodePeople/CompanyPagingList.do\">기업</a>\r\n");
      out.write("                    <a class=\"header-link\" href=\"/CodePeople/mainJsp/mainJO.jsp\">채용</a>\r\n");
      out.write("                    <a class=\"header-link\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/CodePeople/EachBoardPaging.do\">커뮤니티</a>\r\n");
      out.write("                    <a class=\"header-link\" href=\"/CodePeople/GoMyPage.do\">마이페이지</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"divider\"></div>\r\n");
      out.write("                <!-- 로그인버튼 -->\r\n");
      out.write("                <button id=\"header-login-btn\" class=\"btn btn-primary btn-sm\">로그인</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- 바디 -->\r\n");
      out.write("    <div id=\"body\">\r\n");
      out.write("        <div id=\"body-container\">\r\n");
      out.write("            <!-- 바디 메인 좌측 메뉴바 -->\r\n");
      out.write("            <div class=\"nav-left-bar\">\r\n");
      out.write("                <div class=\"nav-sticky\">\r\n");
      out.write("                    <ul class=\"list-group\">\r\n");
      out.write("                        <li class=\"list-group-item\">토픽 베스트</li>\r\n");
      out.write("                        <a href=\"/CodePeople/EachBoardPaging.do?currentPageNo=1&boardCode=1\"><li class=\"list-group-item\">회사 생활</li></a>\r\n");
      out.write("                        <a href=\"/CodePeople/EachBoardPaging.do?currentPageNo=1&boardCode=2\"><li class=\"list-group-item\">사는 얘기</li></a>\r\n");
      out.write("                        <a href=\"/CodePeople/EachBoardPaging.do?currentPageNo=1&boardCode=3\"><li class=\"list-group-item\">이직 커리어</li></a>\r\n");
      out.write("                        <a href=\"/CodePeople/EachBoardPaging.do?currentPageNo=1&boardCode=4\"><li class=\"list-group-item\">스터디 모임</li></a>\r\n");
      out.write("                        <a href=\"/CodePeople/EachBoardPaging.do?currentPageNo=1&boardCode=5\"><li class=\"list-group-item\">Q & A</li></a>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- 바디 콘텐츠 -->\r\n");
      out.write("            <div id=\"content\">\r\n");
      out.write("            <!-- 게시판 메인: 카테고리 검색 -->\r\n");
      out.write("            <div class=\"filter-box content-box board\">\r\n");
      out.write("                <h1 class=\"h1\">관심있는 내용을 검색해보세요!</h1>\r\n");
      out.write("                <div class=\"search-tags\"></div>\r\n");
      out.write("                <div class=\"input-group mb-3 col-lg-10 search-text\">\r\n");
      out.write("                    <input type=\"text\" class=\"form-control\" placeholder=\"검색어 입력\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"filter-save-box\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-outline-primary filter-save\">검색</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("            <!-- 게시판 게시글 상세 화면 글쓰기 댓글 등등 기능 있음-->\r\n");
      out.write("            <div class=\"content-box search-result board board-main board-life\">\r\n");
      out.write("                <div class=\"board-header\">\r\n");
      out.write("                    <div class=\"board-name\">\r\n");
      out.write("                        <i class=\"fas fa-building\"></i>&nbsp;<h1 class=\"h1\">");
      out.print(boardName );
      out.write("</h1>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"my-btn-box\">\r\n");
      out.write("                        <button id=\"write\" type=\"button\" class=\"btn btn-outline-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#writeModal\">글쓰기</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\t\t\t\t<!-- 게시글 작성(글쓰기) 폼 -->\r\n");
      out.write("\t\t\t\t<div class=\"modal\" id=\"writeModal\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-dialog modal-lg\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<h4 class=\"modal-title\">글쓰기</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("                                    <form id=\"fid\" action=\"\" enctype=\"multipart-formdata\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <label>작성자</label><input class=\"mobody-input writer\" type=\"text\" name=\"memId\" disabled=\"disabled\"><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <label>제목</label><input class=\"mobody-input title\" type=\"text\" name=\"boardTitle\"><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t    <label>Tags</label><input class=\"mobody-input tag\" type=\"text\" name=\"boardHead\">\r\n");
      out.write("<!--                                         <div class=\"mobody-input\" name=\"note\" id=\"summernote\"></div>  -->\r\n");
      out.write("                                        <textarea name=\"boardCont\" class=\"summernote\"></textarea>\r\n");
      out.write("\t                                    <input type='hidden' name=\"boardNo\" class=\"boardNo\" value=\"\" id=\"getBoardNo\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type='hidden' name=\"boardCodeNo\" class=\"boardCodeNo\" value=\"");
      out.print(boardCode );
      out.write("\" id=\"getboardCodeNo\">\r\n");
      out.write("<!-- \t                                    \t<div class=\"form-group\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t                            <input type=\"file\" name=\"Uploadfile\" id=\"file\" class=\"input-file\" value=\"\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t                            <label for=\"file\" class=\"btn btn-tertiary js-labelFile\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t                                <i class=\"icon fa fa-check\"></i> -->\r\n");
      out.write("<!-- \t\t\t\t\t                                <span class=\"js-fileName\">Choose a file</span> -->\r\n");
      out.write("<!-- \t\t\t\t\t                            </label> -->\r\n");
      out.write("<!-- \t\t\t\t\t                            <input type=\"hidden\" value=\"\" name=\"memId\"> -->\r\n");
      out.write("<!-- \t\t\t\t\t                        </div>  -->\r\n");
      out.write("\t\t\t                            <!-- <button type=\"button\" id=\"send\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">작성완료</button>\r\n");
      out.write("                                    </form>\r\n");
      out.write("                                    \t<form id=\"fileUpload\"> -->\r\n");
      out.write("\t\t                                   \t<input type=\"file\" name=\"uploadfile\" class=\"btn btn-primary\">\r\n");
      out.write("\t\t                                    <button type=\"button\" id=\"send\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">작성완료</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">닫기</button>\r\n");
      out.write("\t                                    </form>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- 게시글 수정 폼 -->\r\n");
      out.write("\t\t\t\t<div class=\"modal\" id=\"updateModal\">\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-dialog modal-lg\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<!--Modal Header  -->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<h4 class=\"modal-title\">수정하기</h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<form id=\"upModal\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>작성자</label><input class=\"mobody-input fin mwriter\" type=\"text\" name=\"memId\" disabled=\"disabled\"><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>제목</label><input class=\"mobody-input fin mtitle\" type=\"text\" name=\"boardTitle\"><br> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label>Tags</label><input class=\"mobody-input fin mtag\" type=\"text\" name=\"boardHead\">\r\n");
      out.write("\t\t\t<!-- \t\t\t\t\t<div class=\"mobody-input\" name=\"note\" id=\"summernote\"></div>  -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<textarea name=\"boardCont\" class=\"summernote fin mcont\" placeholder=\"hi\"></textarea>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type='hidden' name=\"boardCodeNo\" class=\"boardCodeNo\" value=\"");
      out.print(boardCode );
      out.write("\" id=\"getboardCodeNo\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type='hidden' name=\"boardNo\" class=\"boardNo\" value=\"\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" id=\"upsend\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">수정완료</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" data-bs-dismiss=\"modal\">닫기</button>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<div class=\"board-body\">\r\n");
      out.write("                <div class=\"divider\"></div>\r\n");
      out.write("                <!-- 아코디언 : 게시판 게시글들 시작 -->\r\n");
      out.write("                    <div id=\"accordion\">\r\n");
      out.write("                    \t");
 for(Map<String, Object> vo : boardList){
      out.write("\r\n");
      out.write("\t\t                <div class=\"card\">\r\n");
      out.write("\t\t\t        \t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t\t        \t\t<a class=\"btn title-btn boardNo action\" name=\"list\" id=\"list\" flag=\"no\" toggle=\"off\" idx=\"");
      out.print( vo.get("BOARD_NO") );
      out.write("\"data-bs-toggle=\"collapse\" href=\"#a");
      out.print( vo.get("BOARD_NO") );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t        \t\t<span class=\"board-detail-title title\">");
      out.print( vo.get("BOARD_TITLE") );
      out.write("</span>\r\n");
      out.write("\t\t\t\t        \t\t</a>\r\n");
      out.write("\t\t\t\t        \t\t<div class=\"board-icon-box\">\r\n");
      out.write("\t\t\t\t\t        \t\t<i class=\"far fa-eye\"></i>&nbsp;<span class=\"board-view board-sm-font\">");
      out.print( vo.get("BOARD_HIT") );
      out.write("</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t        \t\t<i class=\"far fa-thumbs-up\"></i>&nbsp;<span class=\"board-like board-sm-font\">");
      out.print( vo.get("BOARD_LIKE") );
      out.write("</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t        \t\t<i class=\"far fa-comment\"></i>&nbsp;<span class=\"board-comment board-sm-font\">");
      out.print( vo.get("BOARD_REPL") );
      out.write("</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t        \t\t\r\n");
      out.write("\t\t\t        \t\t<div id=\"a");
      out.print( vo.get("BOARD_NO") );
      out.write("\" class=\"collapse\" data-bs-parent=\"#accordion\">\r\n");
      out.write("\t\t\t\t        \t\t<div class=\"card-body cbody\">\r\n");
      out.write("\t\t\t\t\t        \t\t<div class=\"board-info-box\">\r\n");
      out.write("\t\t\t\t\t\t        \t\t작성자&nbsp;:&nbsp;<span class=\"board-detail-writer writer\">");
      out.print( vo.get("MEM_ID") );
      out.write("</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t        \t\t작성 일&nbsp;:&nbsp;<span class=\"board-detail-date\">'");
      out.print( vo.get("BOARD_DATE") );
      out.write("'</span> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t        \t\t<a href=\"\" style=\"text-decoration: none;\">추천</a>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t        \t\t<a href=\"\" style=\"text-decoration: none;\">신고</a>\r\n");
      out.write("\t\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t\t\t        \t\t<span class=\"board-detail-content content\">\r\n");
      out.write("\t\t\t\t\t        \t\t\t");
      out.print( vo.get("BOARD_CONT") );
      out.write("\r\n");
      out.write("\t\t\t\t\t        \t\t</span>\r\n");
      out.write("\t\t\t\t\t        \t\t<div class=\"my-btn-box my-btn-box-cv\">\r\n");
      out.write("\t\t\t\t\t\t        \t\t<button type=\"button\" name=\"update\" idx= '");
      out.print( vo.get("BOARD_NO") );
      out.write("' class=\"btn btn-outline-primary action updatebtn\">수정</button>\r\n");
      out.write("\t\t\t\t\t\t        \t\t<button type=\"button\" name=\"delete\" idx= '");
      out.print( vo.get("BOARD_NO") );
      out.write("' class=\"btn btn-outline-primary action\">삭제</button>\r\n");
      out.write("\t\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t\t        \t\t<div class=\"board-divider\"></div>\r\n");
      out.write("\t\t\t\t        \t\t<div class=\"board-bottom-icon-box\">  \r\n");
      out.write("\t\t\t\t\t        \t\t<div class=\"board-icon-item action\" name=\"like\"><i class=\"far fa-thumbs-up\"></i>&nbsp;<span class=\"board-like board-sm-font\">좋아요</span></div>\r\n");
      out.write("\t\t\t\t\t        \t\t<div class=\"board-icon-item action\"><i class=\"far fa-comment\"></i>&nbsp;<span class=\"board-comment board-sm-font\">댓글</span></div>\r\n");
      out.write("\t\t\t\t\t        \t\t<div class=\"board-icon-item action\" name=\"report\"><i class=\"far fa-frown\"></i>&nbsp;<span class=\"board-comment board-sm-font\">신고</span></div>\r\n");
      out.write("\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t\t        \t\t\r\n");
      out.write("\t\t\t\t        \t\t<div class=\"reply-box rep\" id=\"rp-box-");
      out.print( vo.get("BOARD_NO") );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t        \t\t<div class=\"input-group mb-3\">\r\n");
      out.write("\t\t\t\t\t\t        \t\t<input type=\"text\" idx='");
      out.print( vo.get("BOARD_NO") );
      out.write("' class=\"form-control\" placeholder=\"댓글을 입력하세요\">\r\n");
      out.write("\t\t\t\t\t\t        \t\t<button type=\"button\" name=\"reply\" idx='");
      out.print( vo.get("BOARD_NO") );
      out.write("' class=\"btn btn-outline-primary action\">등록</button>\r\n");
      out.write("\t\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t\t        \t\t</div>\r\n");
      out.write("\t\t\t        \t\t</div>\r\n");
      out.write("\t\t        \t\t</div> \r\n");
      out.write("                    \t");
	} 
      out.write("\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("        \t\t<div class=\"board-footer\">\r\n");
      out.write("        \t\t\t<div id=\"result-page-box\">\r\n");
      out.write("\t\t\t   \t\t\t");
  int firstPage = pagingVO.getFirstPageNo();
			   				int pageCount = pagingVO.getPageSize();
			   				int currentPage = pagingVO.getCurrentPageNo();
			   				int lastPage = pagingVO.getLastPageNo();
			   				int totalPageCount = pagingVO.getTotalPageCount(); 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"pagination\">\r\n");
      out.write("\t\t\t\t\t\t");
 if (firstPage > pageCount) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"/CodePeople/EachBoardPaging.do?currentPageNo=");
      out.print(firstPage - pageCount );
      out.write("&boardCode=");
      out.print(boardCode );
      out.write("\">Previous</a></li>\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");
 for (int i = firstPage; i <= lastPage; i++) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t");
	if (i == currentPage) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"page-item active\"><a class=\"page-link\" href=\"/CodePeople/EachBoardPaging.do?currentPageNo=");
      out.print(i );
      out.write("&boardCode=");
      out.print(boardCode );
      out.write('"');
      out.write('>');
      out.print( i);
      out.write("</a></li>\r\n");
      out.write("\t\t\t\t\t\t");
 	} else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"/CodePeople/EachBoardPaging.do?currentPageNo=");
      out.print(i );
      out.write("&boardCode=");
      out.print(boardCode );
      out.write('"');
      out.write('>');
      out.print( i);
      out.write("</a></li>\r\n");
      out.write("\t\t\t\t\t\t");
 	}
						} 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\t\t");
 if (lastPage < totalPageCount) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<li class=\"page-item\"><a class=\"page-link\" href=\"/CodePeople/EachBoardPaging.do?currentPageNo=");
      out.print(firstPage + pageCount );
      out.write("&boardCode=");
      out.print(boardCode );
      out.write("\">Next</a></li>\r\n");
      out.write("\t\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("        \t\t\t</div>  \t\t\r\n");
      out.write("        \t\t</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("\t            \t\t\t<!-- 댓글 수정폼 -->\r\n");
      out.write("\t\t\t<div id=\"modiForm\" style=\"display: none\">\r\n");
      out.write("\t\t      <textarea rows=\"5\" cols=\"30\"></textarea>\r\n");
      out.write("\t\t      <input type=\"button\" id=\"btnok\" value=\"확인\"> \r\n");
      out.write("\t\t      <input type=\"button\" id=\"btnreset\" value=\"취소\">\r\n");
      out.write("\t\t   </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("     </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!--  풋터-->\r\n");
      out.write("    <div id=\"footer\">\r\n");
      out.write("        <div id=\"footer-container\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

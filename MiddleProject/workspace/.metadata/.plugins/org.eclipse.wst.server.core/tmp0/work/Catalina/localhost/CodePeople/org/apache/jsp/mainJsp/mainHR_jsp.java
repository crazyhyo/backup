/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2021-10-27 00:39:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.mainJsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.hr.service.HRServiceImpl;
import kr.or.ddit.hr.service.IHRService;
import kr.or.ddit.member.service.MemberServiceImpl;
import kr.or.ddit.member.service.IMemberService;
import kr.or.ddit.member.vo.MemberVO;

public final class mainHR_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.or.ddit.member.service.IMemberService");
    _jspx_imports_classes.add("kr.or.ddit.hr.service.IHRService");
    _jspx_imports_classes.add("kr.or.ddit.member.vo.MemberVO");
    _jspx_imports_classes.add("kr.or.ddit.member.service.MemberServiceImpl");
    _jspx_imports_classes.add("kr.or.ddit.hr.service.HRServiceImpl");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write(" ");


 MemberVO loginMember = session.getAttribute("memVO") == null?
             null : (MemberVO)session.getAttribute("memVO");
 System.out.println("START");
 	 //변수 선언하기
 	 int memCode=0;
 	 int memNo=0;
 	 int comNo=0;
 	 int hrNo=0;
     if(loginMember == null) {
		//비회원인 경우
    	 memCode=0;
    	 System.out.println("비화원"+memCode);
     }else {
    	//회원인경우 멤버 코드
     	memCode = (int)loginMember.getMemCode();
     	memNo = loginMember.getMemNo();
     	if(memCode == 2) {
			//기업회원인 경우
	 	    IMemberService memberService = MemberServiceImpl.getInstance();
	     	System.out.println("기업화원"+memCode);
			
	     	//회원 번호를 바탕으로 기업정보를 등록한 회원인지 판단
	     	int check = memberService.checkRegisterdCorp(memNo);
	        if(check > 0) {
	        comNo = memberService.getComNo(memNo);
			}  
    	}else{
    		IHRService hrService = HRServiceImpl.getInstance();
    		hrNo = hrService.getHrNo(memNo);
    		System.out.println("일반회원"+memCode);
    	}
     	
     }
       
 
      out.write("   \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("  <title>Bootstrap Example</title>\r\n");
      out.write("  <meta charset=\"utf-8\">\r\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("  <script src=\"https://kit.fontawesome.com/d3ee6ce800.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("//js/SSDropDowns.js\"></script>\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("//js/SSPaging.js\"></script>\r\n");
      out.write("  <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("//js/jquery.serializejson.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("   <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/main.css\">\r\n");
      out.write("  \r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("   document.addEventListener(\"DOMContentLoaded\", () => {\r\n");
      out.write("    console.log(\"DOM is ready\");\r\n");
      out.write(" \r\n");
      out.write("    let currentPageNo = 1;\r\n");
      out.write("    //기본리스트를 출력하는 메서드 currentPage값으로 1을 hardcoding에서 넘겨준다. \r\n");
      out.write("    HRCardPaging(currentPageNo);\r\n");
      out.write("    \r\n");
      out.write("    //화면 로드시 드랍다운의 버튼을 모두 가져온다.\r\n");
      out.write("    const dropdownBtns = document.querySelectorAll('.dropdown button');\r\n");
      out.write("    //현재 클릭한 드랍다운\r\n");
      out.write("    let dropdownBtn = \"\";\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    const searchBtn = document.querySelector('#searchBtn');\r\n");
      out.write("    searchBtn.addEventListener('click',()=>{\r\n");
      out.write("    \tHRSearchCardPaging();\r\n");
      out.write("    })\r\n");
      out.write("    \r\n");
      out.write("   /* \r\n");
      out.write("    $(document).on('click','.tag',function(){\r\n");
      out.write("    \tconsole.log('remove');\r\n");
      out.write("       let tagName = $(this).attr('idx');\r\n");
      out.write("  \t  let category = $(this).attr('name');\r\n");
      out.write("  \t  let tagValue = $(this).val();\r\n");
      out.write("  \t\r\n");
      out.write("  \t  \r\n");
      out.write("  \t  console.log(tagName);\r\n");
      out.write("  \t  console.log(category);\r\n");
      out.write("  \t  console.log(tagValue);\r\n");
      out.write("  \tif(category==\"jgCodeNo\"){\r\n");
      out.write("  \t\tdocument.querySelector('#jgCodeNo').value = 0;\r\n");
      out.write("  \t}else if(category==\"plCodeNo\"){\r\n");
      out.write("  \t\tdocument.querySelector('#plCodeNo').value=0;\r\n");
      out.write("  \t}else if(category==\"eduCodeNo\"){\r\n");
      out.write("  \t\t document.querySelector('#eduCodeNo').value= 0;\r\n");
      out.write("  \t}else if(category==\"cityCodeNo\"){\r\n");
      out.write("  \t\tdocument.querySelector('#cityCodeNo').value = 0;\r\n");
      out.write("  \t}else if(category==\"provCodeNo\"){\r\n");
      out.write("  \t\tdocument.querySelector('#cityCodeNo').value = 0;\r\n");
      out.write("  \t}\r\n");
      out.write("  \t\r\n");
      out.write("  \tthis.remove();\r\n");
      out.write("    }) */\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    $(document).on(\"click\",\".goDetail\",function(){\r\n");
      out.write("    let option = this;\r\n");
      out.write("\tlet hrNo = option.getAttribute('idx');\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\t\turl : '/CodePeople/goHrDetail.do',\r\n");
      out.write("\t\t\ttype : 'get',\r\n");
      out.write("\t\t\tdata : {\"hrNo\":hrNo},\r\n");
      out.write("\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\tconsole.log(res)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t   error :function(xhr){\r\n");
      out.write("\t\t\t   console.log(`status: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${xhr.satus}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\\ntext : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${xhr.statusText}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("`);\r\n");
      out.write("\t\t   }\r\n");
      out.write("\t\t})\r\n");
      out.write("    })\r\n");
      out.write("    \r\n");
      out.write("    let cityCodeNo =\"\";\r\n");
      out.write("   \r\n");
      out.write("  \r\n");
      out.write("\t// 드랍다운 아래 옵션 목록을 가져오는 메서드 \r\n");
      out.write("    const bringOptions = (btn) => {\r\n");
      out.write("      let key = btn.textContent;\r\n");
      out.write("      if (key === \"직군\") {\r\n");
      out.write("        initJobGroupList(btn);\r\n");
      out.write("      } else if (key === \"활동분야\") {\r\n");
      out.write("        initProgLangList(btn);\r\n");
      out.write("      } else if (key === \"학력\") {\r\n");
      out.write("        initEduTypeList(btn);\r\n");
      out.write("      } else if (key === \"지역\") {\r\n");
      out.write("        initCityList(btn);\r\n");
      out.write("      } else if (key === \"상세지역\") {\r\n");
      out.write("        initProvList(btn);\r\n");
      out.write("      }\r\n");
      out.write("     \r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("\t//모든 드랍 다운 항목에 이벤트 부여\r\n");
      out.write("    dropdownBtns.forEach(btn => {\r\n");
      out.write("      btn.addEventListener(\"click\", event => {\r\n");
      out.write("        dropdownBtn = event.currentTarget;\r\n");
      out.write("        bringOptions(dropdownBtn);\r\n");
      out.write("      })\r\n");
      out.write("    })    \r\n");
      out.write("\r\n");
      out.write("   });\r\n");
      out.write("   \r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <!-- 헤더 -->\r\n");
      out.write("    <div id=\"header\">\r\n");
      out.write("        <!-- 헤더 메인 메뉴 바 -->\r\n");
      out.write("        <div id=\"header-container\">\r\n");
      out.write("            <!-- 좌측 메뉴 -->\r\n");
      out.write("            <div id=\"header-left-menu\">\r\n");
      out.write("                <!-- 로고 -->\r\n");
      out.write("                <a href=\"/CodePeople/rehearsal/home.html\" id=\"logo\"><i class=\"fas fa-copyright\" style=\"font-size: 32px;\"></i></a>\r\n");
      out.write("                <div class=\"divider\"></div>\r\n");
      out.write("                <!-- 통합 검색창 -->\r\n");
      out.write("                <div id=\"search-box\">\r\n");
      out.write("                    <div id=\"search-item\">\r\n");
      out.write("                        <i class=\"fas fa-search item\" style=\"width:15.3px; height:19px;\"> </i>\r\n");
      out.write("                        <input class=\"\" type=\"text\"\r\n");
      out.write("                            style=\"height:19px; border:none;border-right:0px; border-top:0px; boder-left:0px; boder-bottom:0px;\"\r\n");
      out.write("                            placeholder=\"통합검색\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- 우측 메뉴 -->\r\n");
      out.write("            <div id=\"header-right-menu\">\r\n");
      out.write("                <!-- 메인 메뉴 링크 -->\r\n");
      out.write("                <div id=\"header-link-box\">\r\n");
      out.write("                <a class=\"header-link\" href=\"/CodePeople/MainHR.do\">인재</a>\r\n");
      out.write("            <a class=\"header-link\" href=\"/CodePeople/CompanyPagingList.do\">기업</a>\r\n");
      out.write("            <a class=\"header-link\" href=\"/CodePeople/mainJsp/mainJO.jsp\">채용</a>\r\n");
      out.write("            <a class=\"header-link\" href=\"/CodePeople/EachBoardPaging.do\">커뮤니티</a>\r\n");
      out.write("            <a class=\"header-link myPage\" href=\"/CodePeople/GoMyPage.do\">마이페이지</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"divider\"></div>\r\n");
      out.write("                <!-- 로그인버튼 -->\r\n");
      out.write("                <button id=\"header-login-btn\" class=\"btn btn-primary btn-sm\">로그아웃</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- 바디 -->\r\n");
      out.write("    <div id=\"body\">\r\n");
      out.write("        <div id=\"body-container\">\r\n");
      out.write("            <!-- 바디 메인 좌측 메뉴바 -->\r\n");
      out.write("            <div class=\"nav-left-bar\">\r\n");
      out.write("                <div class=\"nav-sticky\">\r\n");
      out.write("                    <ul class=\"list-group\">\r\n");
      out.write("                        <a href=\"/CodePeople/RegiHRInfo.do\"><li class=\"list-group-item\">프로필 등록</li></a>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- 바디 콘텐츠 -->\r\n");
      out.write("            <div id=\"content\">\r\n");
      out.write("<!--             목록에서 선택한 갑사을 보낼 폼데이터 -->\r\n");
      out.write("            <form id=\"formDatas\">\r\n");
      out.write("           \t    <input type=\"hidden\" name =\"currentPageNo\" id =\"currentPageNo\" value=\"1\">\r\n");
      out.write("                <input type=\"hidden\" name =\"jgCodeNo\" id =\"jgCodeNo\" value=\"0\">\r\n");
      out.write("                <input type=\"hidden\" name =\"plCodeNo\" id =\"plCodeNo\" value=\"0\"> \r\n");
      out.write("                <input type=\"hidden\" name =\"eduCodeNo\" id =\"eduCodeNo\" value=\"0\">\r\n");
      out.write("                <input type=\"hidden\" name =\"cityCodeNo\" id =\"cityCodeNo\" value=\"0\">\r\n");
      out.write("                <input type=\"hidden\" name =\"provCodeNo\" id =\"provCodeNo\"value=\"0\">\r\n");
      out.write("            </form>\r\n");
      out.write("            <form id=\"favHrForm\">\r\n");
      out.write("\t            <input type=\"hidden\" name=\"comNo\" id=\"comNo\" value=\"\">\r\n");
      out.write("\t            <input type=\"hidden\" name=\"hrNo\" id=\"hrNo\" value=\"\">\r\n");
      out.write("            </form>\r\n");
      out.write("\t\t\t\t<!-- 콘텐츠 인재 검색-->\r\n");
      out.write("                <div class=\"filter-box content-box human\">\r\n");
      out.write("                    <h1 class=\"h1\">인재검색</h1>\r\n");
      out.write("                    <div class=\"filter-box-dropdowns\">\r\n");
      out.write("                        <div class=\"dropdown\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">직군</button>\r\n");
      out.write("                            <ul class=\"dropdown-menu\"></ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"dropdown\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">활동분야</button>\r\n");
      out.write("                            <ul class=\"dropdown-menu\"></ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"dropdown\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">학력</button>\r\n");
      out.write("                            <ul class=\"dropdown-menu\"></ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"dropdown\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle\" data-bs-toggle=\"dropdown\">지역</button>\r\n");
      out.write("                            <ul class=\"dropdown-menu\"></ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                            <div class=\"dropdown\">\r\n");
      out.write("                            <button type=\"button\" class=\"btn btn-primary dropdown-toggle hide\" id=\"provBtn\" data-bs-toggle=\"dropdown\">상세지역</button>\r\n");
      out.write("                            <ul class=\"dropdown-menu\"></ul>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"input-group mb-3 col-lg-10 search-text\">\r\n");
      out.write("                      <div class=\"search-tags hide\"></div>\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" placeholder=\"검색어 입력\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"filter-save-box\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-outline-primary filter-save\" id=\"searchBtn\">검색</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <!-- 콘텐츠 인재 검색결과 -->\r\n");
      out.write("                <div class=\"content-box search-result human\" id=\"human-card-list\">\r\n");
      out.write("                    <!-- 검색결과 카드 -->\r\n");
      out.write("                   \r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!--  풋터-->\r\n");
      out.write("    <div id=\"footer\">\r\n");
      out.write("        <div id=\"footer-container\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

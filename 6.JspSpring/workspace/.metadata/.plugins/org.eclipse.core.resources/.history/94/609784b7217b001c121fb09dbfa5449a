package egovframework.example.util;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;

import com.google.zxing.BarcodeFormat;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.WriterException;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.QRCodeWriter;

public class CmmnUtil {

	public static boolean createQrCode(String key, String test, String fileName) {
		QRCodeWriter qrCodeWriter = new QRCodeWriter(); // QR 코드
		MultiFormatWriter multiFormatWriter = new MultiFormatWriter(); // 바코드

//			String text = "1234123";
//		String text = "http:192.168.143.3:8787/login.do?key=" + id;
		String text = String.format("http:192.168.143.22:8787/login.do?key=%s", key);
		try {
			text = new String(text.getBytes("UTF-8"), "ISO-8859-1");

			// zxing에서 스트림에 파일을 뿌릴수있도록 메소드를 지원함.rw 큐알코드
			OutputStream out = new FileOutputStream(String.format("/Temp/%s.png", fileName));
			BitMatrix bitMatrix = qrCodeWriter.encode(text, BarcodeFormat.QR_CODE, 500, 200);
			MatrixToImageWriter.writeToStream(bitMatrix, "png", out);
			out.close();
			return true;
			
		} catch (WriterException | IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return false;
		}
		
		
		return true;
	}
}
